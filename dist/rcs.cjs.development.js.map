{"version":3,"file":"rcs.cjs.development.js","sources":["../src/Slider/utils.ts","../src/Slider/modes.ts","../src/utils.ts","../src/Rail/Rail.tsx","../src/Handles/Handles.tsx","../src/scales/LinearScale.ts","../src/Ticks/Ticks.tsx","../src/Tracks/Tracks.tsx","../src/scales/DiscreteScale.ts","../src/scales/CurvedScale.ts","../src/Slider/Slider.tsx"],"sourcesContent":["import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: ReadonlyArray<number> = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n","import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n","export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { RailProps } from './types';\n\nconst NOOP = () => ({ value: 0, percent: 0 });\n\nexport class Rail extends Component<RailProps> {\n  getRailProps = (props: OtherProps = {}) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      getEventData: getEventData || NOOP,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { HandlesProps } from './types';\n\nexport class Handles extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props: OtherProps = {}) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        (e: React.KeyboardEvent<Element>) => emitKeyboard && emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        (e: React.MouseEvent) => emitMouse && emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        (e: React.TouchEvent<Element>) => emitTouch && emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nfunction clamp(value: number, min: number, max: number) {\n    return Math.min(Math.max(value, min), max);\n}\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n  curved: boolean = true;\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    if (!this.curved) {\n        const { domain, range } = this;\n        return (\n            this.interpolator ||\n            (this.interpolator = this.createInterpolator(domain, range))\n        )(+x);\n    }\n    // for our code, x axis is slider (0 to 100); y axis is price (min to max price)\n    // for this part, even tho var name is \"x\", it is referring to our price (y)\n    // here domain is price; range is slider\n    // given a price (y), we want to find the position in the slider range (x)\n    // const { domain, range } = this;\n    const retVal = this.getPositionFromPrice(x);\n    // console.log(`Y->X||= x: ${x} | Domain: ${domain} | Range: ${range} | Ret Val: ${retVal}`);\n    return retVal;\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getRange() {\n    return this.range;\n  }\n\n  getTicks(count: number) {\n    const d = this.curved ? this.range : this.domain;   // we want to use slider values as our stuff is curved\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n\n    getPositionFromPrice = (y: number) => {\n        // for our code, a to z is y axis i.e., price\n        // r to s is x axis i.e., slider\n        const {\n            // @ts-ignore\n            domain: [a, z],\n            // @ts-ignore\n            range: [r, s]\n        } = this;\n\n        // const r = 0;\n        // const s = 100;\n        // standard ellipse eq: x^2/a^2 + y^2/b^2 = 1 where -a<=x<=a\n        // converting to our coordinates:\n\n        //         |\n        //         |z    *\n        //         |    *\n        //         |  .*\n        // –―–―–―–―|*―–―–―–―\n        //         |r    s\n        //         |\n        //         |-z\n        //         |\n\n        // standard eq becomes a z unit translate in y axis hence the (y-z)^2 instead of y^2\n        // we also need to do a (z-a) in the bottom since our domain does not always start from zero; but a.\n        // https://www.desmos.com/calculator/j7glwotha2\n        return s * Math.sqrt((1 - (y - z) * (y - z) / ((z-a) * (z-a))));    //x\n    }\n\n    // this is opposite function of above; give x and get y\n    getValueFromPosition = (x: number) => {\n        const {\n            // @ts-ignore\n            domain: [a, z],\n            // @ts-ignore\n            range: [r, s]\n        } = this;\n\n        // @ts-ignore\n        // const r = 0;\n        // const s = 100;\n        // we add a - at start since we want the bottom part of curve and a +z transform along y\n        return Math.round(- (z-a) * Math.sqrt((1 - (x * x) / (s * s))) + z); // y\n    }\n\n    getValueFromPixel = (x: number) => {\n        const {\n            domain: [a, z],\n            range: [r, s],\n        } = this;\n\n        const step = 100;\n        const p = (clamp(x, r, s) - r) / (s - r);   // percentage (0 to 1)\n        const b = step * Math.round(this.getValueFromPosition(p * 100) / step); // round to step int\n        // console.log(`P->X->Y||= x: ${x} | Domain: ${this.domain} | Range: ${this.range} | Ret Val: ${b}`);\n\n        return clamp(b, a < z ? a : z, z > a ? z : a);\n    };\n}\n","import React, { Component } from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Ticks extends Component<TicksProps> {\n  public render() {\n    const {\n      children,\n      values,\n      scale = new LinearScale(),\n      count = 10,\n      getEventData = defaultGetEventData,\n      activeHandleID = '',\n    } = this.props;\n\n    const ticks = (values ? values : scale.getTicks(count)).map((value) => ({\n      id: `$$-${value}`,\n      value: scale.getValueFromPixel(value),\n      percent: value,\n    }));\n\n    const renderedChildren = children({ getEventData, activeHandleID, ticks });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class CurvedScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  getRange() {\n    return this.range;\n  }\n  getDomain() {\n    return this.domain;\n  }\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [a, z],\n      range: [r, s],\n      step,\n    } = this;\n\n    const p = (clamp(x, a, z) - a) / (z - a);\n    const b = step * Math.round(this.getValueFromPosition(p * 100)/step);\n    // console.log(`(C)X->Y||= x: ${x} | Domain: ${this.domain} | Range: ${this.range} | Ret Val: ${b}`);\n\n    return clamp(b, r < s ? r : s, s > r ? s : r);\n  };\n\n  // this function is slightly different from the one in LinearScale as in the range/domains are different when this is called\n  // hence the hardcoded r/s\n  getValueFromPosition = (x: number) => {\n    const {\n      // @ts-ignore\n      range: [a, z],\n    } = this;\n\n    // @ts-ignore\n    const r = 0;\n    const s = 100;\n    return Math.round(- (z-a) * Math.sqrt((1 - (x*x)/(s*s))) + z); // y\n  }\n}\n","import React, { PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { CurvedScale } from '../scales/CurvedScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode): item is RCSComponent => {\n  if (!isValidElement(item)) {\n    return false;\n  }\n\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nconst defaultDomain = [0, 100];\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: defaultDomain,\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = defaultDomain,\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new CurvedScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.domain === defaultDomain ||\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n      valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain === defaultDomain ? [...domain] : domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map((v) =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map((d) => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      document.addEventListener('touchmove', this.onTouchMove);\n      document.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map((d) => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map((d) => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, (child) => {\n      if (isRCSComponent(child) === true) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],"names":["prfx","getSortByVal","reversed","sortByVal","a","b","val","getUpdatedHandles","handles","updateKey","updateValue","index","findIndex","v","key","slice","sort","getSliderDomain","slider","vertical","s","getBoundingClientRect","d0","top","left","d1","bottom","right","isNotValidTouch","type","touches","length","toLowerCase","getTouchPosition","e","clientY","pageX","getHandles","values","valueToStep","warn","changes","map","x","getValue","warning","i","mode1","_","next","mode2","curr","mode3","step","indexForMovingHandle","handleMoveIsPositive","c","n","increment","n0","n1","newStep","clone","check","callAll","fns","forEach","fn","NOOP","value","percent","Rail","getRailProps","props","emitMouse","emitTouch","onMouseDown","onTouchStart","getEventData","activeHandleID","children","renderedChildren","React","Children","only","Component","Handles","autofocus","target","HTMLElement","focus","getHandleProps","id","emitKeyboard","onKeyDown","clamp","min","max","Math","LinearScale","interpolator","domain","range","curved","getPositionFromPrice","y","z","sqrt","getValueFromPosition","round","getValueFromPixel","r","p","r0","r1","interpolateValue","deinterpolateValue","t","createInterpolator","retVal","rescale","count","d","ticks","defaultGetEventData","Ticks","scale","getTicks","Tracks","getTrackProps","getDomain","tracks","source","push","DiscreteScale","setDomain","setRange","setStep","CurvedScale","isBrowser","window","document","noop","compare","m","equal","reduce","isRCSComponent","item","isValidElement","name","getNextValue","newVal","getPrevValue","defaultDomain","Slider","state","valueToPerc","pixelToStep","createRef","handleID","validUpKeys","validDownKeys","keyCode","concat","includes","stopPropagation","preventDefault","found","find","currVal","nextHandles","submitUpdate","onStart","isTouch","current","TouchEvent","MouseEvent","onMouseMove","onTouchMove","onMouseUp","onChange","onSlideEnd","setState","removeEventListener","onTouchEnd","removeListeners","onSlideStart","addTouchEvents","addMouseEvents","handleRailAndTrackClicks","minDiff","Infinity","diff","abs","addEventListener","callOnChange","mode","onUpdate","Array","isArray","className","rootStyle","rootProps","component","Comp","disabled","flatten","mappedHandles","child","cloneElement","createElement","style","ref","nextProps","prevState","warnOnChanges","nextState","undefined","Object","keys","PureComponent"],"mappings":"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"}